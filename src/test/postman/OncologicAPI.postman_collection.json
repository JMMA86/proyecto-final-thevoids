{
  "info": {
    "name": "Oncologic API - Complete Test Suite",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Combined collection for testing all controllers of the Oncologic API in sequence\n\n## Automatic Environment Setup\n\nThis collection automatically sets up the required environment variables if they don't exist:\n\n- `baseUrl`: Default is 'http://localhost:8080'\n- `username`: Default is 'admin'\n- `password`: Default is 'password123'\n- `userId`: Default is 1\n- `technicianId`: Default is 1\n\nThe following variables are set automatically during execution:\n\n- `token`: Set after successful login\n- `patientId`: Set after creating a patient\n- `medicalHistoryId`: Set after creating a medical history\n- `labId`: Set after creating a lab test\n- `scheduleId`: Set after creating a schedule\n\nYou can override these defaults by setting the variables in your environment before running the collection."
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default values for required environment variables if they don't exist",
          "if (!pm.environment.get(\"baseUrl\")) {",
          "    pm.environment.set(\"baseUrl\", \"http://localhost:8080\");",
          "    console.log(\"Set default baseUrl: http://localhost:8080\");",
          "}",
          "",
          "if (!pm.environment.get(\"username\")) {",
          "    pm.environment.set(\"username\", \"123456789\");",
          "    console.log(\"Set default username: 123456789\");",
          "}",
          "",
          "if (!pm.environment.get(\"password\")) {",
          "    pm.environment.set(\"password\", \"password123\");",
          "    console.log(\"Set default password: password123\");",
          "}",
          "",
          "if (!pm.environment.get(\"userId\")) {",
          "    pm.environment.set(\"userId\", 1);",
          "    console.log(\"Set default userId: 1\");",
          "}",
          "",
          "if (!pm.environment.get(\"technicianId\")) {",
          "    pm.environment.set(\"technicianId\", 1);",
          "    console.log(\"Set default technicianId: 1\");",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs after each request in the collection",
          "// It ensures that all environment variables are saved",
          "pm.test(\"Environment variables are saved\", function() {",
          "    // List of all variables that should be saved",
          "    const variablesToCheck = [",
          "        \"baseUrl\",",
          "        \"username\",",
          "        \"password\",",
          "        \"userId\",",
          "        \"technicianId\",",
          "        \"token\",",
          "        \"patientId\",",
          "        \"medicalHistoryId\",",
          "        \"labId\",",
          "        \"scheduleId\"",
          "    ];",
          "    ",
          "    // Log all existing variables",
          "    console.log(\"Current environment variables:\");",
          "    variablesToCheck.forEach(function(variable) {",
          "        const value = pm.environment.get(variable);",
          "        if (value) {",
          "            console.log(`${variable}: ${value}`);",
          "        }",
          "    });",
          "});"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"token\", jsonData.accessToken);",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Token is present\", function () {",
                  "    pm.expect(jsonData.accessToken).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Patient Tests",
      "item": [
        {
          "name": "Create Patient",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": {{userId}},\n    \"bloodGroup\": \"O+\",\n    \"allergies\": \"None\",\n    \"familyHistory\": \"No significant history\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "patients"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Ensure we have a token before making this request",
                  "if (!pm.environment.get(\"token\")) {",
                  "    console.log(\"No token found. Please run the Login request first.\");",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"patientId\", jsonData.patientId);",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Patient ID is present\", function () {",
                  "    pm.expect(jsonData.patientId).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Patients",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "patients"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Patient by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "patients", "{{patientId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Patient ID matches\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.patientId.toString()).to.equal(pm.environment.get(\"patientId\").toString());",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Patient",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": {{userId}},\n    \"bloodGroup\": \"O+\",\n    \"allergies\": \"Penicillin\",\n    \"familyHistory\": \"No significant history\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/patients/{{patientId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "patients", "{{patientId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Updated field is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.allergies).to.equal(\"Penicillin\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Medical History Tests",
      "item": [
        {
          "name": "Create Medical History",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"patientId\": {{patientId}},\n    \"diagnosis\": \"Hypertension\",\n    \"treatment\": \"Medication and lifestyle changes\",\n    \"medications\": \"Lisinopril 10mg daily\",\n    \"recordDate\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/medical-histories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "medical-histories"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Ensure we have a patientId before making this request",
                  "if (!pm.environment.get(\"patientId\")) {",
                  "    console.log(\"No patientId found. Please run the Create Patient request first.\");",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"medicalHistoryId\", jsonData.historyId);",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Medical History ID is present\", function () {",
                  "    pm.expect(jsonData.historyId).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Medical Histories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/medical-histories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "medical-histories"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Medical History by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/medical-histories/{{medicalHistoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "medical-histories", "{{medicalHistoryId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Medical History ID matches\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.historyId.toString()).to.equal(pm.environment.get(\"medicalHistoryId\").toString());",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Medical History",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"patientId\": {{patientId}},\n    \"diagnosis\": \"Hypertension\",\n    \"treatment\": \"Updated medication regimen\",\n    \"medications\": \"Lisinopril 20mg daily\",\n    \"recordDate\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/medical-histories/{{medicalHistoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "medical-histories", "{{medicalHistoryId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Updated field is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.treatment).to.equal(\"Updated medication regimen\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Medical History",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/medical-histories/{{medicalHistoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "medical-histories", "{{medicalHistoryId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Lab Tests",
      "item": [
        {
          "name": "Assign Lab",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"patientId\": {{patientId}},\n    \"testType\": \"Blood Test\",\n    \"testDate\": \"{{$isoTimestamp}}\",\n    \"notes\": \"Routine blood work\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/labs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "labs"]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Ensure we have a patientId before making this request",
                  "if (!pm.environment.get(\"patientId\")) {",
                  "    console.log(\"No patientId found. Please run the Create Patient request first.\");",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"labId\", jsonData.labId);",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Lab ID is present\", function () {",
                  "    pm.expect(jsonData.labId).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Labs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/labs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "labs"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Lab by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/labs/{{labId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "labs", "{{labId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Lab ID matches\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.labId.toString()).to.equal(pm.environment.get(\"labId\").toString());",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Lab",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"patientId\": {{patientId}},\n    \"testType\": \"Blood Test\",\n    \"testDate\": \"{{$isoTimestamp}}\",\n    \"notes\": \"Updated notes for routine blood work\",\n    \"results\": \"Normal levels\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/labs/{{labId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "labs", "{{labId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Updated field is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.notes).to.equal(\"Updated notes for routine blood work\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Lab",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/labs/{{labId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "labs", "{{labId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Schedule Tests",
      "item": [
        {
          "name": "Create Schedule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": {{userId}},\n    \"dayOfWeek\": \"Monday\",\n    \"startTime\": \"{{$isoTimestamp}}\",\n    \"endTime\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/schedule",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "schedule"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"scheduleId\", jsonData.scheduleId);",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Schedule ID is present\", function () {",
                  "    pm.expect(jsonData.scheduleId).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Schedules",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/schedule",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "schedule"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Schedule by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/schedule/{{scheduleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "schedule", "{{scheduleId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Schedule ID matches\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.scheduleId.toString()).to.equal(pm.environment.get(\"scheduleId\").toString());",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Schedule",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"userId\": {{userId}},\n    \"dayOfWeek\": \"Tuesday\",\n    \"startTime\": \"{{$isoTimestamp}}\",\n    \"endTime\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/schedule/{{scheduleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "schedule", "{{scheduleId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Updated field is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.dayOfWeek).to.equal(\"Tuesday\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Schedule",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/schedule/{{scheduleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "schedule", "{{scheduleId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Appointment Tests",
      "item": [
        {
          "name": "Create Appointment",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"patientId\": 1,\n  \"clinicAssignmentId\": 1,\n  \"appointmentTypeId\": 1,\n  \"dateTime\": \"2023-10-02T10:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"appointmentId\", jsonData.appointmentId);",
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Appointment ID is present\", function () { pm.expect(jsonData.appointmentId).to.exist; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Appointments",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Response is an array\", function () { var jsonData = pm.response.json(); pm.expect(Array.isArray(jsonData)).to.be.true; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Appointment by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointments", "{{appointmentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Appointment ID matches\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.appointmentId.toString()).to.equal(pm.environment.get(\"appointmentId\").toString()); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Appointment",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"patientId\": 1,\n  \"clinicAssignmentId\": 1,\n  \"appointmentTypeId\": 1,\n  \"dateTime\": \"2023-10-02T11:00:00.000Z\",\n  \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointments", "{{appointmentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Updated status is correct\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.status).to.equal(\"confirmed\"); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Appointment",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointments/{{appointmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointments", "{{appointmentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Appointment Type Tests",
      "item": [
        {
          "name": "Create Appointment Type",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"typeName\": \"Follow-up\",\n  \"standardDuration\": 15\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointment-types",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointment-types"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"appointmentTypeId\", jsonData.typeId);",
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Appointment Type ID is present\", function () { pm.expect(jsonData.typeId).to.exist; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Appointment Types",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointment-types",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointment-types"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Response is an array\", function () { var jsonData = pm.response.json(); pm.expect(Array.isArray(jsonData)).to.be.true; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Appointment Type by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointment-types/{{appointmentTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointment-types", "{{appointmentTypeId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Appointment Type ID matches\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.typeId.toString()).to.equal(pm.environment.get(\"appointmentTypeId\").toString()); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Appointment Type",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"typeName\": \"Consultation\",\n  \"standardDuration\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointment-types/{{appointmentTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointment-types", "{{appointmentTypeId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Updated typeName is correct\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.typeName).to.equal(\"Consultation\"); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Appointment Type",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/appointment-types/{{appointmentTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "appointment-types", "{{appointmentTypeId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Clinic Tests",
      "item": [
        {
          "name": "Create Clinic",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"New Clinic\",\n  \"address\": \"456 Clinic Rd\",\n  \"phone\": \"555-9999\",\n  \"specialty\": \"Cardiology\",\n  \"capacity\": 20\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinics"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"clinicId\", jsonData.id);",
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Clinic ID is present\", function () { pm.expect(jsonData.id).to.exist; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Clinics",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinics"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Response is an array\", function () { var jsonData = pm.response.json(); pm.expect(Array.isArray(jsonData)).to.be.true; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Clinic by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinics/{{clinicId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinics", "{{clinicId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Clinic ID matches\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.id.toString()).to.equal(pm.environment.get(\"clinicId\").toString()); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Clinic",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Clinic\",\n  \"address\": \"789 Clinic Rd\",\n  \"phone\": \"555-8888\",\n  \"specialty\": \"Oncology\",\n  \"capacity\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinics/{{clinicId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinics", "{{clinicId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Updated name is correct\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.name).to.equal(\"Updated Clinic\"); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Clinic",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinics/{{clinicId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinics", "{{clinicId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Clinic Assignment Tests",
      "item": [
        {
          "name": "Create Clinic Assignment",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startTime\": \"2023-10-01T08:00:00.000Z\",\n  \"endTime\": \"2023-10-01T16:00:00.000Z\",\n  \"clinicId\": 1,\n  \"userId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinic-assignments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinic-assignments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"clinicAssignmentId\", jsonData.id);",
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Clinic Assignment ID is present\", function () { pm.expect(jsonData.id).to.exist; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Clinic Assignments",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinic-assignments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinic-assignments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Response is an array\", function () { var jsonData = pm.response.json(); pm.expect(Array.isArray(jsonData)).to.be.true; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Clinic Assignment by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinic-assignments/{{clinicAssignmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinic-assignments", "{{clinicAssignmentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Clinic Assignment ID matches\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.id.toString()).to.equal(pm.environment.get(\"clinicAssignmentId\").toString()); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Clinic Assignment",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startTime\": \"2023-10-01T09:00:00.000Z\",\n  \"endTime\": \"2023-10-01T17:00:00.000Z\",\n  \"clinicId\": 1,\n  \"userId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinic-assignments/{{clinicAssignmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinic-assignments", "{{clinicAssignmentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Updated startTime is correct\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.startTime).to.include(\"09:00:00\"); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Clinic Assignment",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clinic-assignments/{{clinicAssignmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "clinic-assignments", "{{clinicAssignmentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Task Tests",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Prepare patient report\",\n  \"completed\": true,\n  \"startDate\": \"2023-10-02T09:00:00.000Z\",\n  \"endDate\": \"2023-10-02T09:30:00.000Z\",\n  \"appointmentId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"taskId\", jsonData.id);",
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Task ID is present\", function () { pm.expect(jsonData.id).to.exist; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Response is an array\", function () { var jsonData = pm.response.json(); pm.expect(Array.isArray(jsonData)).to.be.true; });"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks", "{{taskId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Task ID matches\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.id.toString()).to.equal(pm.environment.get(\"taskId\").toString()); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Prepare patient report updated\",\n  \"completed\": false,\n  \"startDate\": \"2023-10-02T09:00:00.000Z\",\n  \"endDate\": \"2023-10-02T09:45:00.000Z\",\n  \"appointmentId\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks", "{{taskId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                  "pm.test(\"Updated description is correct\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.description).to.equal(\"Prepare patient report updated\"); });"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": {
              "raw": "{{baseUrl}}/api/v1/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "tasks", "{{taskId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
